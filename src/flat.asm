# Generated by mc: 9:54 3.19.2019.
#
	.data
	.text
main:	addi	$sp, $sp, -4		# push fp
	sw	$fp, 0($sp)
	move	$fp, $sp		# fp <- sp
	addi	$sp, $sp, -40		# allocate locals
	li	$v0, 0
	sw	$v0, -40($fp)
	li	$v0, 2
	sw	$v0, -8($fp)
	li	$v0, 3
	sw	$v0, -12($fp)
	lw	$t1, -8($fp)
	lw	$t2, -12($fp)
	add	$v0, $t1, $t2
	sw	$v0, -16($fp)
	li	$v0, 4
	sw	$v0, -20($fp)
	li	$v0, 5
	sw	$v0, -24($fp)
	lw	$t1, -20($fp)
	lw	$t2, -24($fp)
	mul	$v0, $t1, $t2
	sw	$v0, -28($fp)
	li	$v0, 8
	sw	$v0, -32($fp)
	lw	$t1, -16($fp)
	addi	$sp, $sp, -4		# push 
	sw	$t1, 0($sp)
	lw	$t1, -28($fp)
	addi	$sp, $sp, -4		# push 
	sw	$t1, 0($sp)
	lw	$t1, -32($fp)
	addi	$sp, $sp, -4		# push 
	sw	$t1, 0($sp)
	addi	$sp, $sp, -4		# push 
	sw	$ra, 0($sp)
	jal	f
	lw	$ra, 0($sp)		# pop ra
	addi	$sp, $sp, 4
	addi	$sp, $sp, 12		# deallocate args
	sw	$v0, -36($fp)
	lw	$v0, -36($fp)
	sw	$v0, -40($fp)
	move	$sp, $fp
	lw	$fp, 0($sp)		# pop restore fp
	addi	$sp, $sp, 4
	li	$v0, 17			# $v0 gets exit code for syscall
	syscall				# Exit here
f:	addi	$sp, $sp, -4		# push fp
	sw	$fp, 0($sp)
	move	$fp, $sp		# fp <- sp
	addi	$sp, $sp, -4		# allocate locals
	lw	$v0, 16($fp)
	sw	$v0, -4($fp)
	lw	$v0, -4($fp)
	move	$sp, $fp
	lw	$fp, 0($sp)		# pop restore fp
	addi	$sp, $sp, 4
	jr	$ra				# return
